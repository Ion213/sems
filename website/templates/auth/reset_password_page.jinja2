<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>

   <link rel="stylesheet" href="{{ url_for('static', filename='js_lib/bootstrap5.3/css/bootstrap.min.css') }}">
  
  <link rel="stylesheet" href="{{ url_for('static', filename='js_lib/fontawesome-free-6.5.2-web/css/all.min.css') }}">

  <link rel="stylesheet" href="{{ url_for('static', filename='js_lib/sweet-alert/css/sweetalert2.min.css') }}">


    <!-- Favicon -->
   <link rel="icon" href="{{ url_for('static', filename='logo/dtc.png') }}" type="image/png">

   <link rel="stylesheet" href="{{ url_for('static', filename='css/auth/reset_password_page.css') }}">

</head>
<body>

<div class="reset-password-container">
    <div class="reset-password-card">
        <div class="card-header">
            <h3><i class="fas fa-key"></i> Reset Password</h3>
        </div>
        <div class="card-body">
            {% if message %}
                <div class="alert alert-{{ 'danger' if not success else 'success' }} mb-4" role="alert">
                    <i class="fas fa-{{ 'exclamation-circle' if not success else 'check-circle' }}"></i> {{ message }}
                </div>
            {% endif %}
            
            {% if success is not defined or success %}
                <form method="POST" id="reset_password_form">
                    <div class="form-group">
                        <div class="input-group mb-3">
                            <input type="password" class="form-control" name="new_password" id="new_password" 
                                required placeholder=" " minlength="6" maxlength="20" aria-describedby="passwordHelp" autofocus>
                            <span class="floating-placeholder">New Password</span>
                            <button type="button" class="btn btn-outline-secondary" id="togglePassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>

                        <div class="input-group">
                            <input type="password" class="form-control" name="confirm_password" id="confirm_password" 
                                required placeholder=" " minlength="6" maxlength="20" aria-describedby="passwordHelp" autofocus>
                            <span class="floating-placeholder">Confirm Password</span>
                            <button type="button" class="btn btn-outline-secondary" id="toggleConfirmPassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>

                    <div id="passwordMismatch" class="text-danger d-none mb-3">
                        <i class="fas fa-exclamation-circle"></i> Passwords do not match.
                    </div>

                    <button type="submit" class="btn btn-reset">
                        <i class="fas fa-sync-alt"></i> Reset Password
                    </button>
                </form>

            {% endif %}
            
            <div class="text-center mt-3">
                <a href="{{ url_for('login.login_page') }}" class="btn-back">
                    <i class="fas fa-arrow-left"></i> Back to Login
                </a>
            </div>
        </div>
    </div>
</div>

<!-- jQuery, Bootstrap JS, SweetAlert2 -->
<script src="{{ url_for('static', filename='js_lib/bootstrap5.3/js/bootstrap.bundle.min.js') }}"></script>

  <script src="{{ url_for('static', filename='js_lib/jquery3.7.1/jquery-3.7.1.min.js') }}"></script>

  <script src="{{ url_for('static', filename='js_lib/sweet-alert/js/sweetalert2@11.js') }}"></script>

<script>
    $(document).ready(function () {

        // Toggle Password Visibility
        $("#togglePassword").click(function () {
            let passwordField = $("#new_password");
            let icon = $(this).find("i");
            passwordField.attr("type", passwordField.attr("type") === "password" ? "text" : "password");
            icon.toggleClass("fa-eye fa-eye-slash");
        });

        $("#toggleConfirmPassword").click(function () {
            let confirmPasswordField = $("#confirm_password");
            let icon = $(this).find("i");
            confirmPasswordField.attr("type", confirmPasswordField.attr("type") === "password" ? "text" : "password");
            icon.toggleClass("fa-eye fa-eye-slash");
        });


        $("#confirm_password").on("input", function () {
            if ($("#new_password").val() !== $("#confirm_password").val()) {
                $("#passwordMismatch").removeClass("d-none");
            } else {
                $("#passwordMismatch").addClass("d-none");
            }
        });

        $("#reset_password_form").submit(function (event) {
            event.preventDefault(); // Prevent default form submission

            const newPassword = $("#new_password").val();
            const confirmPassword = $("#confirm_password").val();

            // Check if passwords match
            if (newPassword !== confirmPassword) {
                $("#passwordMismatch").removeClass("d-none");
                return; // ❌ Stop submission
            }

            // Password Strength Validation
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{6,20}$/;
            if (!passwordRegex.test(newPassword)) {
                Swal.fire({
                    icon: "error",
                    title: "Weak Password",
                    text: "Password must be 6-20 characters long and include at least 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.",
                    timer: 4000,
                    timerProgressBar: true
                });
                return;
            }

            Swal.fire({
            title: 'Processing...',
            allowOutsideClick: false,
            didOpen: () => Swal.showLoading()
        });

            
            // Show loading state
            const submitBtn = $(this).find('button[type="submit"]');
            const originalBtnText = submitBtn.html();
            submitBtn.html('<i class="fas fa-spinner fa-spin"></i> Processing...');
            submitBtn.prop('disabled', true);
            
            $.ajax({
                url: window.location.pathname,
                type: "POST",
                data: $(this).serialize(),
                dataType: "json",
                success: function (data) {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Password Reset!',
                            text: data.message,
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'Continue to Login',
                            timer: 3000,
                            timerProgressBar: true,
                            willClose: () => {
                                window.location.href = data.redirect_url || "{{ url_for('login.login_page') }}";
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Reset Failed',
                            text: data.message,
                            confirmButtonColor: '#d33',
                            confirmButtonText: 'Try Again'
                        });
                    }
                },
                error: function (xhr) {
                    let errorMsg = "Something went wrong. Please try again.";
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        errorMsg = xhr.responseJSON.message;
                    }
                    
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: errorMsg,
                        confirmButtonColor: '#d33',
                        confirmButtonText: 'OK'
                    });
                },
                complete: function() {
                    submitBtn.html(originalBtnText);
                    submitBtn.prop('disabled', false);
                }
            });
        });
    });
</script>

</body>
</html>